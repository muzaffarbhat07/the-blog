{"version":3,"sources":["useFetch.js","BlogDetails.js","Create.js","BlogList.js","Home.js","Navbar.js","NotFound.js","App.js","index.js"],"names":["useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","BlogDetails","id","useParams","blog","history","useHistory","className","title","author","body","onClick","method","push","Create","setTitle","setBody","setAuthor","onSubmit","e","preventDefault","config","headers","JSON","stringify","type","required","value","onChange","target","disabled","BlogList","blogs","map","to","Home","Navbar","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb740626.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  useEffect(() => {\r\n\r\n    const abortCont = new AbortController();\r\n\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then(res => {\r\n       if(!res.ok) {\r\n         throw Error(\"Failed to fetch the data\");\r\n       }\r\n       return res.json();\r\n     })\r\n      .then(data => {\r\n       setData(data);\r\n       setIsPending(false);\r\n       setError(null);\r\n      })\r\n     .catch(err => {\r\n       if(err.name === \"AbortError\") {\r\n         console.log(\"Fetch Aborted\");\r\n       } else {\r\n\r\n         setError(err.message);\r\n         setIsPending(false);\r\n       }\r\n      }) \r\n\r\n      return () => abortCont.abort();\r\n  }, [url])\r\n  return ( { data, isPending, error } );\r\n}\r\n \r\nexport default useFetch;","import { useHistory, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n\r\n  const { id } = useParams();\r\n  const {data:blog, isPending, error} = useFetch(\"http://localhost:8000/blogs/\" + id);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDelete = () => {\r\n    const config = {\r\n      method: \"DELETE\"\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/blogs/\" + id, config)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n  }\r\n\r\n  return ( \r\n    <div className=\"blog-details\">\r\n      { isPending && <div>Loading...</div> }\r\n      { error && <div>{ error.message }</div> }\r\n      { blog && \r\n        <div>\r\n          <h2 className=\"primary-color\">{ blog.title }</h2>\r\n          <p>Written by { blog.author }</p>\r\n          <div>{ blog.body }</div>\r\n          <button className=\"btn\" onClick = { handleDelete }>delete</button>\r\n        </div>        \r\n      }\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default BlogDetails;","import { useHistory } from \"react-router\";\r\nimport { useState } from \"react\";\r\n\r\nconst Create = () => {\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"Muzaffar\");\r\n\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const blog = { title, body, author };\r\n\r\n    setIsPending(true);\r\n\r\n    const config = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    };\r\n    fetch(\"http://localhost:8000/blogs\", config)\r\n      .then(() => {\r\n        setIsPending(false);\r\n        history.push(\"/\");\r\n      })\r\n  }\r\n  return ( \r\n    <div className=\"create\">\r\n      <h2 className=\"primary-color\">Add a New Blog</h2>\r\n      <form onSubmit = { handleSubmit }>\r\n        <label>Blog Title:</label>\r\n        <input type=\"text\" required value = {title} onChange={ (e) => setTitle(e.target.value)}/>\r\n\r\n        <label>Blog Body:</label>\r\n        <textarea required value = {body} onChange={ (e) => setBody(e.target.value)}></textarea>\r\n        \r\n        <label>Blog Author:</label>\r\n        <select required value = {author} onChange={ (e) => setAuthor(e.target.value)}>\r\n          <option value=\"Muzaffar\">Muzaffar</option>\r\n          <option value=\"Shahid\">Shahid</option>\r\n        </select>\r\n\r\n        { !isPending && <button className=\"btn\">Add Blog</button> }\r\n        { isPending && <button className=\"btn\" disabled>Adding Blog...</button> }\r\n      </form>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Create;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ blogs, title }) => {\r\n  return ( \r\n    <div className=\"blog-list\">\r\n      <h2>{ title }</h2>\r\n      { blogs.map((blog) => {\r\n        return (\r\n          <div className=\"blog-preview\" key={blog.id}>\r\n            <Link to={`/blogs/${blog.id}`}>\r\n              <h2 className=\"primary-color\">{ blog.title }</h2>\r\n              <p>Written by { blog.author }</p>\r\n            </Link>\r\n          </div>\r\n      )})}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default BlogList;","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const { data: blogs, isPending, error } = useFetch(\"http://localhost:8000/blogs\");\r\n\r\n  return ( \r\n    <div className=\"home\">\r\n      { isPending && <div>Loading...</div> }\r\n      { error && <div>{ error }</div> }\r\n      { blogs && <BlogList blogs={ blogs } title=\"All Blogs\"/> }\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Home;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return ( \r\n    <div className=\"navbar\">\r\n      <h2 className=\"primary-color\">The Blog</h2>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/create\">New Blog</Link>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return ( \r\n    <div className=\"not-found\">\r\n      <h1>404</h1>\r\n      <p>We could not find the page you were looking for.</p>\r\n      <Link to=\"/\" className=\"btn\">Go back to Homepage</Link>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default NotFound;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlogDetails from './BlogDetails';\nimport Create from './Create';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport NotFound from './NotFound';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}